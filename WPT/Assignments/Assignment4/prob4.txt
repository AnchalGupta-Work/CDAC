Exercise 4:
Modify fetchData from Exercise 3 to include error handling.
Requirements:
 Call the callback with an error message if an error occurs; otherwise, pass
the “response.”
 Handle the error gracefully by logging it if it occurs.





function fetchData(url, callback) {
    setTimeout(() => {
        const errorOccurred = Math.random() > 0.5;
        if (errorOccurred) {
            callback(`Error fetching data from ${url}`, null);
        } else {
            callback(null, `Response from ${url}`);
        }
    }, 2000);
}

fetchData("https://example.com", (error, response) => {
    if (error) {
        console.log(error);
    } else {
        console.log(response);
    }
});
